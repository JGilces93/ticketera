import tkinter as tk
from tkinter import messagebox
import sqlite3

# Conectar a la base de datos
conexion = sqlite3.connect('base_datos.db')
cursor = conexion.cursor()

# Crear la tabla "credenciales" si no existe
cursor.execute('''CREATE TABLE IF NOT EXISTS credenciales (
                    usuario TEXT,
                    contraseña TEXT
                )''')

# Guardar los cambios y cerrar la conexión
conexion.commit()
conexion.close()


class InicioSesionVentana:
    def __init__(self, root):
        self.root = root
        self.root.title("Inicio de Sesión")
        self.root.geometry("400x300")

        self.lbl_usuario = tk.Label(root, text="Usuario:")
        self.lbl_usuario.pack()

        self.entry_usuario = tk.Entry(root)
        self.entry_usuario.pack()

        self.lbl_contrasena = tk.Label(root, text="Contraseña:")
        self.lbl_contrasena.pack()

        self.entry_contrasena = tk.Entry(root, show="*")
        self.entry_contrasena.pack()

        self.btn_iniciar_sesion = tk.Button(root, text="Iniciar Sesión", command=self.verificar_inicio_sesion)
        self.btn_iniciar_sesion.pack()

        self.conexion = sqlite3.connect('base_datos.db')
        self.cursor = self.conexion.cursor()

    def verificar_inicio_sesion(self):
        usuario = self.entry_usuario.get()
        contrasena = self.entry_contrasena.get()

        # Consultar en la base de datos
        query = "SELECT * FROM credenciales WHERE usuario = ? AND contrasena = ?"
        self.cursor.execute(query, (usuario, contrasena))
        resultado = self.cursor.fetchone()

        if resultado is not None:
            # Cerrar la conexión
            self.conexion.close()

            # Cerrar la ventana actual
            self.root.destroy()

            # Abrir la ventana de requerimientos
            requerimientos_ventana = RequerimientosVentana()
            requerimientos_ventana.mostrar_ventana()
        else:
            messagebox.showerror("Error", "Credenciales incorrectas")

class RequerimientosVentana:
    def __init__(self):
        self.ventana = tk.Tk()
        self.ventana.title("Ticketera")
        self.ventana.geometry("400x300")

        self.menu = tk.Menu(self.ventana)
        self.menu.add_command(label="Nuevo Requerimiento", command=self.mostrar_formulario_nuevo_requerimiento)
        self.menu.add_command(label="Consulta de Requerimientos", command=self.mostrar_formulario_consulta_requerimientos)
        self.menu.add_command(label="Generar Reporte", command=self.reporte_requerimientos)

        self.ventana.config(menu=self.menu)

    def mostrar_ventana(self):
        self.ventana.mainloop()

    def mostrar_formulario_nuevo_requerimiento(self):
        ventana_requerimiento = tk.Toplevel(self.ventana)
        ventana_requerimiento.title("Nuevo Requerimiento")
        ventana_requerimiento.geometry("700x250")

        lbl_contrato = tk.Label(ventana_requerimiento, text="Contrato:")
        lbl_contrato.pack()

        entry_contrato = tk.Entry(ventana_requerimiento)
        entry_contrato.pack()

        lbl_cuenta = tk.Label(ventana_requerimiento, text="Cuenta:")
        lbl_cuenta.pack()

        entry_cuenta = tk.Entry(ventana_requerimiento)
        entry_cuenta.pack()

        lbl_comentario = tk.Label(ventana_requerimiento, text="Comentario:")
        lbl_comentario.pack()

        text_comentario = tk.Text(ventana_requerimiento, height=5)
        text_comentario.pack()

        btn_guardar = tk.Button(ventana_requerimiento, text="Guardar", command=lambda: self.guardar_requerimiento(entry_contrato.get(), entry_cuenta.get(), text_comentario.get("1.0", tk.END)))
        btn_guardar.pack()
        
    def guardar_requerimiento(self, contrato, cuenta, comentario):
        pass
    
    def mostrar_formulario_consulta_requerimientos(self):
        messagebox.showinfo("Consulta de Requerimientos", "Formulario de Consulta de Requerimientos")

    def reporte_requerimientos(self):
        messagebox.showinfo("Generar Reporte", "Generando Reporte de Requerimientos")

# Crear la ventana de inicio de sesión
root = tk.Tk()

# Inicializar la aplicación
inicio_sesion_ventana = InicioSesionVentana(root)

# Mostrar la ventana de inicio de sesión
root.mainloop()

